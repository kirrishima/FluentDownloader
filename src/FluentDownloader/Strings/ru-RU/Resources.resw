<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VideoUrlLabel.Text" xml:space="preserve">
    <value>Видео URL:</value>
  </data>
  <data name="UrlTextBox.PlaceholderText" xml:space="preserve">
    <value>Введите ссылку на видео или плейлист</value>
  </data>
  <data name="OpenEditUrlButton.Content" xml:space="preserve">
    <value>Развернуть</value>
  </data>
  <data name="OpenEditUrlButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Открыть расширенные настройки URL</value>
  </data>
  <data name="SaveToLabel.Text" xml:space="preserve">
    <value>Сохранить в:</value>
  </data>
  <data name="SavePathTextBox.PlaceholderText" xml:space="preserve">
    <value>Выберите папку назначения</value>
  </data>
  <data name="SavePathTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Выберите папку, в которую будет сохранено видео.</value>
  </data>
  <data name="SavePathTeachingTip.Title" xml:space="preserve">
    <value>Выбор папки назначения</value>
  </data>
  <data name="SavePathTeachingTip.Subtitle" xml:space="preserve">
    <value>Выберите папку, в которую будет сохранено видео.</value>
  </data>
  <data name="SavePathButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Нажмите, чтобы выбрать папку через проводник.</value>
  </data>
  <data name="SavePathButtonTextBlock.Text" xml:space="preserve">
    <value>Обзор</value>
  </data>
  <data name="FormatTextBlock.Text" xml:space="preserve">
    <value>Формат:</value>
  </data>
  <data name="FormatComboBox.Header" xml:space="preserve">
    <value>Разрешение</value>
  </data>
  <data name="FormatComboBox.PlaceholderText" xml:space="preserve">
    <value>Выберите</value>
  </data>
  <data name="FormatComboBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>--format: Эта опция позволяет указать формат(ы) видео и/или аудио для загрузки.</value>
  </data>
  <data name="FormatComboBoxItem1.Content" xml:space="preserve">
    <value>Лучшее видео</value>
  </data>
  <data name="FormatComboBoxItem2.Content" xml:space="preserve">
    <value>Лучшее аудио</value>
  </data>
  <data name="FormatComboBoxItem3.Content" xml:space="preserve">
    <value>Лучшее видео+Лучшее аудио</value>
  </data>
  <data name="VideoFormatComboBox.Header" xml:space="preserve">
    <value>Формат видео</value>
  </data>
  <data name="VideoFormatComboBox.PlaceholderText" xml:space="preserve">
    <value>Выберите</value>
  </data>
  <data name="VideoFormatComboBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>--merge-output-format: Эта опция определяет формат контейнера для итогового файла при объединении видео и аудио. Если объединение не требуется, формат может отличаться от выбранного.</value>
  </data>
  <data name="AudioFormatComboBox.Header" xml:space="preserve">
    <value>Формат аудио</value>
  </data>
  <data name="AudioFormatComboBox.PlaceholderText" xml:space="preserve">
    <value>Выберите</value>
  </data>
  <data name="AudioFormatComboBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>--audio-format: Эта опция определяет формат, в котором аудио должно быть загружено или преобразовано. Если указанный формат недоступен, yt-dlp попытается преобразовать аудио в желаемый формат.</value>
  </data>
  <data name="RecodeVideFormatComboBox.Header" xml:space="preserve">
    <value>Перекодировать</value>
  </data>
  <data name="RecodeVideFormatComboBox.PlaceholderText" xml:space="preserve">
    <value>Выберите</value>
  </data>
  <data name="RecodeVideFormatComboBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Эта опция позволяет перекодировать видео в другой формат после загрузки. Значительно нагружает процессор, может быть *медленной*.</value>
  </data>
  <data name="FormatTeachingTip.Title" xml:space="preserve">
    <value>Выберите формат</value>
  </data>
  <data name="FormatTeachingTip.Subtitle" xml:space="preserve">
    <value>Необходимо выбрать формат для загрузки.</value>
  </data>
  <data name="EditTextDialog.Title" xml:space="preserve">
    <value>Редактировать URL</value>
  </data>
  <data name="EditTextDialog.CloseButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="EditTextDialog.PrimaryButtonText" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="DownloadButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Используйте эту кнопку для загрузки видеоформатов и видео в выбранном формате</value>
  </data>
  <data name="DownloadButtonGetFormatsTextBlock.Text" xml:space="preserve">
    <value>Получить форматы</value>
  </data>
  <data name="DownloadButtonDownloadTextBlock.Text" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="DownloadButtonCancelPanelTextBlock.Text" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ResetDownloadFieldsButtonText.Text" xml:space="preserve">
    <value>Сбросить всё</value>
  </data>
  <data name="ResetDownloadFieldsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Сбрасывает состояние полей ввода, кнопок и очищает логи</value>
  </data>
  <data name="LogsBlockHeader.Text" xml:space="preserve">
    <value>Логи загрузки:</value>
  </data>
  <data name="SaveButtonTextContent.Content" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="ResetButtonTextContent.Content" xml:space="preserve">
    <value>Сбросить</value>
  </data>
  <data name="ResetToDefaultButtonTextContent.Content" xml:space="preserve">
    <value>По умолчанию</value>
  </data>
  <data name="ConfirmButtonTextContent.Content" xml:space="preserve">
    <value>Подтвердить</value>
  </data>
  <data name="NotImplementedYetInfoBar.Message" xml:space="preserve">
    <value>Данная функция ещё не реализована в этой версии приложения. Возможно, она будет добавлена в одном из следующих обновлений.</value>
  </data>
  <data name="Header.Text" xml:space="preserve">
    <value>Fluent Video Downloader</value>
  </data>
  <data name="AddToQueue.ToolTipService.ToolTip" xml:space="preserve">
    <value>Добавить в очередь</value>
  </data>
</root>